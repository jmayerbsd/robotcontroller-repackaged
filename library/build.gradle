apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

android {
    compileSdkVersion 27
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 19
        versionCode 25
        versionName "$ftc_version"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "armeabi-v7a"
        }

        consumerProguardFiles 'proguard-rules.pro'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

group = 'com.github.Pattonville-Robotics'
version = android.defaultConfig.versionName
project.archivesBaseName = 'robotcontroller-repackaged'

dependencies {
    implementation "org.first.ftc:inspection:$ftc_version"
    implementation "org.first.ftc:blocks:$ftc_version"
    implementation "com.github.magneticflux-:robotcore-repackaged:$ftc_version.0"
    implementation "org.first.ftc:hardware:$ftc_version"
    implementation "org.first.ftc:ftc-common:$ftc_version"
    implementation "org.first.ftc:analytics:$ftc_version"
    implementation "org.first.ftc:wireless-p2p:$ftc_version"

    implementation "com.github.magneticflux-:vuforia-repackaged:$ftc_version.0"
}

//For JitPack

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}